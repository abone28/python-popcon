#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2011  Andrey Bondarenko
#
# This file is part of python-popcon
#
# Python-popcon is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of 
# the License, or (at your option) any later version.
#
# Python-popcon is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with python-popcon. If not, see <http://www.gnu.org/licenses/>.
#
"""Upload popularity-contest submission data into a database.

"""

import os
import sys

from datetime import datetime
import pytz

import popcon.sql
import popcon.submission


def parse_args(args):
    import argparse

    parser = argparse.ArgumentParser(
        description="Load popularity-contenst submission data into database"
        )
    parser.add_argument("--db", metavar="URL", required=True,
        help="database URL (for syntax see SQL Alchemy docs)"
        )
    parser.add_argument("file", nargs="?",
        help="a popularity-contest submission file",
        default="/var/log/popularity-contest",
        )

    return parser.parse_args(args)


def main(args=None):

    args = parse_args(args)

    db = popcon.sql.PopconDB(args.db)

    filename = args.file
    host_id, ctime, popcon_ver, data = popcon.submission.reader(filename).next()
    
    s = db.new_submission(host_id, ctime)

    print s._init_db_key()

    UTC = pytz.utc

    writer = s.get_writer()
    def write(package, path, atime, ctime, tag):
        writer.insert(package, path, atime, ctime, tag)

    for row_no, row in enumerate(data):
        print row_no
        if not row:
            # FIXME: don't know why empty lines are in input
            continue
        fatime, fctime, package, path, tag = row
        fatime = datetime.fromtimestamp(int(fatime), UTC)
        fctime = datetime.fromtimestamp(int(fctime), UTC)
        write(package, path, fatime, fctime, tag)


if __name__ == "__main__":
    sys.exit(main())
